name: metasploit-framework
base: core20
adopt-info: metasploit-framework
summary: The Metasploit Framework
description: |
  The **Metasploit Framework** (MSF) is far more than just a collection of exploitsâ€“it is also a solid foundation that you can build upon and easily customize to meet your needs. This allows you to concentrate on your unique target environment and not have to reinvent the wheel. MSF is considered to be one of the single most useful security auditing tools freely available to security professionals today. From a wide array of commercial grade exploits and an extensive exploit development environment, all the way to network information gathering tools and web vulnerability plugins, the Metasploit Framework provides a truly impressive work environment.

  Installation: `snap install metasploit-framework`

  How to use: https://www.offensive-security.com/metasploit-unleashed/

  Issues: https://github.com/JitPatro/metasploit-framework/issues

grade: stable
confinement: strict
#compression: lzo

########################################################################
## This is experimental code and will be changed a lot before release ##
########################################################################

architectures:
  - build-on: amd64
  - build-on: arm64
  - build-on: armhf


assumes:
  - command-chain


environment:
  LANG: C.UTF-8
  LC_ALL: C.UTF-8
  PATH: $SNAP/opt/metasploit-framework/bin:$SNAP/opt/metasploit-framework/embedded/bin:$PATH
  TERMINFO: $SNAP/opt/metasploit-framework/embedded/share/terminfo
  EDITOR: vi
  HOME: $SNAP_USER_COMMON
  TEMPDIR: $SNAP_USER_COMMON  
  TMPDIR: $SNAP_USER_COMMON
  TEMP: $SNAP_USER_COMMON
  TMP: $SNAP_USER_COMMON
 
# Added a slot for Sliver and other snaps to access Metasploit Framework. 
slots:
  metasploit:
    interface: content
    content: executables
    source:
      read:
        - $SNAP/opt


apps:
  msfconsole:
    command: opt/metasploit-framework/bin/msfconsole
    plugs: [home, network, network-bind, network-control, desktop]
    command-chain: [usr/bin/snapcraft-runner]

  msfbinscan:
    command: opt/metasploit-framework/bin/msfbinscan
    plugs: [home]
    command-chain: [usr/bin/snapcraft-runner]

  msfelfscan:
    command: opt/metasploit-framework/bin/msfelfscan
    plugs: [home]
    command-chain: [usr/bin/snapcraft-runner]

  msfmachscan:
    command: opt/metasploit-framework/bin/msfmachscan
    plugs: [home]
    command-chain: [usr/bin/snapcraft-runner]

  msfpescan:
    command: opt/metasploit-framework/bin/msfpescan
    plugs: [home]
    command-chain: [usr/bin/snapcraft-runner]

  msfrop:
    command: opt/metasploit-framework/bin/msfrop
    plugs: [home]
    command-chain: [usr/bin/snapcraft-runner]

  msfvenom:
    command: opt/metasploit-framework/bin/msfvenom
    plugs: [home, network]
    command-chain: [usr/bin/snapcraft-runner]

  msfrpc:
    command: opt/metasploit-framework/bin/msfrpc
    plugs: [network]
    command-chain: [usr/bin/snapcraft-runner]

  msfrpcd:
    command: opt/metasploit-framework/bin/msfrpcd
    plugs: [home, network, network-bind]
    command-chain: [usr/bin/snapcraft-runner]

  msfd:
    command: opt/metasploit-framework/bin/msfd
    plugs: [network, network-bind]
    command-chain: [usr/bin/snapcraft-runner]

  msfdb:
    command: opt/metasploit-framework/bin/msfdb
    plugs: [network, network-bind, home]
    command-chain: [usr/bin/snapcraft-runner]

  msfupdate:
    command: opt/metasploit-framework/bin/msfupdate
    command-chain: [usr/bin/snapcraft-runner]


package-repositories:
  - type: apt
    formats: [deb]
    suites: [lucid]
    components: [main]
    key-id: 09E55FAF4F7862CD6D558997CDFB5FA52007B954
    url: http://downloads.metasploit.com/data/releases/metasploit-framework/apt
    architectures: [amd64, arm64, armhf]


parts:
  launcher:
    source: snap/local
    plugin: dump
    organize:
      '*': usr/bin/
     
  nmap:
    source: https://nmap.org/dist/nmap-7.93.tgz
    plugin: make
    build-packages: [build-essential, libssl-dev, upx-ucl]

    override-build: |
      ./configure --with-libpcap=included --with-libpcre=included --without-nping --without-ncat --without-zenmap --prefix=${SNAPCRAFT_PART_INSTALL}
      sed -i 's/OPENSSL_LIBS = -lssl -lcrypto/OPENSSL_LIBS = -lssl -lcrypto -lpthread/g' ./Makefile
      make static
      make install
      cd ${SNAPCRAFT_PART_INSTALL}/bin; strip ./nmap; upx -9 ./nmap

  metasploit-framework:
    plugin: nil
    stage-packages: [metasploit-framework, libfuse2, libncursesw6, libtinfo6, busybox]
    override-stage: |
      snapcraftctl stage
      sed -i 's#SCRIPTDIR=/opt#SCRIPTDIR=$SNAP/opt#g' ${SNAPCRAFT_STAGE}/opt/metasploit-framework/bin/*
      sed -i 's#INSTALL_DIR="/opt#INSTALL_DIR="$SNAP/opt#g' ${SNAPCRAFT_STAGE}/opt/metasploit-framework/bin/msfdb
      sed -i "198s/'google-chrome'/'xdg-open', 'google-chrome'/g" ${SNAPCRAFT_STAGE}/opt/metasploit-framework/embedded/lib/ruby/gems/3.*/gems/rex-core-*/lib/rex/compat.rb
      sed -i "s#/opt/metasploit-framework/embedded/bin/ruby#/usr/bin/env ruby#g" ${SNAPCRAFT_STAGE}/opt/metasploit-framework/embedded/bin/*
      sed -i '/DEVELOPER_TIPS = \[/,+5d' ${SNAPCRAFT_STAGE}/opt/metasploit-framework/embedded/framework/lib/msf/ui/tip.rb
      sed -i 's/ALL_TIPS = COMMON_TIPS + DEVELOPER_TIPS/ALL_TIPS = COMMON_TIPS/g' ${SNAPCRAFT_STAGE}/opt/metasploit-framework/embedded/framework/lib/msf/ui/tip.rb
      sed -i 's/#{$0}/msfvenom/g' ${SNAPCRAFT_STAGE}/opt/metasploit-framework/embedded/framework/msfvenom
      echo -e '#!/bin/sh\n\nset -e\n\necho "msfupdate is no longer supported when Metasploit is installed as a snap package.\nPlease use:- snap refresh metasploit-framework"' > ${SNAPCRAFT_STAGE}/opt/metasploit-framework/bin/msfupdate
      snapcraftctl set-version $(cd ../parts/metasploit-framework/stage_packages/ && ls metasploit* | awk -F_ '{ printf $2 }' | awk -F+ '{ printf "v"$1"-dev" }')
      chmod +x ${SNAPCRAFT_STAGE}/usr/bin/snapcraft-runner
      
    override-prime: |
      snapcraftctl prime
      cd ${SNAPCRAFT_PRIME}/bin; for binary in {awk,cat,chmod,chown,clear,cp,cut,date,diff,echo,find,grep,head,hexdump,ip,ls,mkdir,mv,netstat,nslookup,ps,pwd,rm,sed,sleep,sort,tail,tar,tee,touch,tr,vi,wc,wget,which,whoami,xxd}; do ln -sf busybox $binary; done
    
